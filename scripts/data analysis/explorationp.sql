SELECT *
FROM pg_tables

--Look all columns in our db
SELECT *
FROM information_schema.columns
WHERE table_schema = 'gold' AND table_name = 'fact_sales';

-- Date exploration (Understand the scope of data and timespan)
SELECT 
    MIN(order_date) AS min_order_date,
    MAX(order_date) AS max_order_date,
    EXTRACT( YEAR FROM AGE(MAX(order_date),MIN(order_date)) AS years_of_data
FROM gold.fact_sales;

SELECT 
    MIN(birthdate) AS min_birthdate,
    MAX(birthdate) AS max_birthdate,
    AGE(NOW(), MIN(birthdate)) AS age_of_oldest_customer,
    EXTRACT( YEAR FROM AGE(MAX(birthdate),MIN(birthdate))) AS years_of_data
FROM gold.dim_customers;

-- Customer exploration (Understand the scope of data and timespan)
SELECT *
FROM gold.dim_customers
WHERE birthdate IS NOT NULL
ORDER BY birthdate DESC
LIMIT 10;

-- Mesuares exploration (Calculate the key metrics of the business, the higest level of aggregation)
/*

*/
SELECT 
    SUM(sales_amount) AS total_sales, 
    SUM(quantity) AS total_quantity,
    AVG(price) AS avg_price,
    COUNT(DISTINCT order_number) AS total_orders
FROM  gold.fact_sales;

SELECT 
    COUNT(DISTINCT product_key) AS total_products
FROM gold.dim_products

SELECT 
    COUNT(DISTINCT customer_key) AS total_customers
FROM gold.dim_customers;

SELECT
    COUNT(DISTINCT customer_key) AS total_customers
FROM gold.fact_sales

-- Combine all the measures
SELECT 'Total Sales' AS metric, SUM(sales_amount) AS value
FROM gold.fact_sales
UNION
SELECT 'Total Quantity' AS metric, SUM(quantity) AS value
FROM gold.fact_sales
UNION
SELECT 'Total Orders' AS metric, COUNT(DISTINCT order_number) AS value
FROM gold.fact_sales
UNION
SELECT 'Total Products' AS metric, COUNT(DISTINCT product_key) AS value
FROM gold.dim_products
UNION
SELECT 'Total Customers' AS metric, COUNT(DISTINCT customer_key) AS value
FROM gold.dim_customers;


--Magnitud analysis (Compare the measures values by categories)
/*
    - Total customers by contry
    - Total custmers by gender
    - Total products by category
    - avg cost of each category
    - Total revenue by category
    - Total revenue generated by each customer
    - Distribution of sold items across contries
*/
SELECT 
    country,
    COUNT(DISTINCT customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country;

SELECT 
    gender,
    COUNT(DISTINCT customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender;

SELECT 
    category,
    COUNT(DISTINCT product_key) AS total_products
FROM gold.dim_products
GROUP BY category;

SELECT
    p.category,
    SUM(s.sales_amount) AS total_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p ON s.product_key = p.product_key
GROUP BY p.category;

SELECT
    c.customer_key,
    SUM(s.sales_amount) AS total_sales,
    COUNT(c.customer_key) OVER() AS total_customers
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c ON s.customer_key = c.customer_key
GROUP BY c.customer_key;

SELECT 
    c.country,
    SUM(s.sales_amount) AS total_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c ON s.customer_key = c.customer_key 
GROUP BY c.country;

SELECT *
FROM information_schema.columns
WHERE table_name = 'fact_sales';


-- Ranking analysis (Order the value of a dimension by a measure)

-- Top 3 products by sales
SELECT
    p.product_name,
    SUM(s.sales_amount) AS total_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p ON s.product_key = p.product_key
GROUP BY p.product_name
ORDER BY total_sales DESC
LIMIT 3